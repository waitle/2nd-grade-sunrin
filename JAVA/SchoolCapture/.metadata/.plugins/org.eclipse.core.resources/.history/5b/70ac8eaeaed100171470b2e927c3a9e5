import java.awt.Color;

import javax.swing.JPanel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JScrollPane;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileFilter;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;

@SuppressWarnings("serial")
public class ViewPic extends JPanel {


	FileOutputStream tempout = null;
	ImageIcon back;
	Image temp;
	File currentfile;
	
	public ViewPic(String path, String subject) {
		
		List<File> piclist = getImgFileList(path);
		
		for(int index=0;index<piclist.size();index++)
		{
			currentfile = piclist.get(index);
			/*
			Image img = back.getImage() ;  
			Image newimg = img.getScaledInstance( article.getWidth(), article.getHeight(),  java.awt.Image.SCALE_SMOOTH ) ;  
			back = new ImageIcon( newimg );
			*/
			JPanel article = new JPanel(){
				public void paintComponent(Graphics g)
				{
					g.drawImage(back.getImage(), 0, 0, null);
					setOpaque(false);
					super.paintComponent(g);
				}
			};
			article.setBounds(56+(index%4)*172, 10+(index/4)*130, 160, 120);
			article.setVisible(true);
			add(article);
		}
		
		
		setBackground(Color.DARK_GRAY);
		this.setSize(800, 550);
		this.setVisible(true);
		setLayout(null);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 0, 800, 500);
		add(scrollPane);
		
		JButton previous = new JButton("\uC774\uC804");
		
		previous.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		previous.setFocusPainted(false);
		previous.setBorderPainted(false);
		previous.setBounds(12, 508, 97, 30);
		previous.setBackground(new Color(220, 220, 220));
		add(previous);
		
		JButton delete = new JButton("\uC0AD\uC81C");
		
		delete.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		delete.setFocusPainted(false);
		delete.setBorderPainted(false);
		delete.setBounds(688, 508, 97, 30);
		delete.setBackground(new Color(220, 220, 220));
		add(delete);
		//이전버튼
		previous.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				System.out.println("subject "+subject+" previous button clicked!");
				Subjects temp = new Subjects();
				removeAll();
				add(temp);
				revalidate();
				repaint();
			}
		});
		//삭제버튼
		delete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
	}
	
	
	public static List<File> getImgFileList(String path){        
        
        return getImgFileList(new File(path));
    }    

    /**
     * 해당 경로의 이미지 파일 목록 반환 
     */
    public static List<File> getImgFileList(File file){        
            
        List<File> resultList = new ArrayList<File>(); //이미지 파일을 저장할 리스트 생성
        
         //지정한 이미지폴더가 존재 할지 않을경우 빈 리스트 반환.
        System.out.println("파일존재 여부: "+file.exists());
        if(!file.exists()) return resultList;
        
        File[] list = file.listFiles(new FileFilter() { //원하는 파일만 가져오기 위해 FileFilter정의
            
            String strImgExt = "jpg|jpeg"; //허용할 이미지타입
            
            @Override
            public boolean accept(File pathname) {                            
                
                //System.out.println(pathname);
                boolean chkResult = false;
                if(pathname.isFile()) {
                    String ext = pathname.getName().substring(pathname.getName().lastIndexOf(".")+1);
                    //System.out.println("확장자:"+ext);
                    chkResult = strImgExt.contains(ext.toLowerCase());        
                    //System.out.println(chkResult +" "+ext.toLowerCase());
                } else {
                    chkResult = true;
                }
                return chkResult;
            }
        });        
        
        for(File f : list) {            
            if(f.isDirectory()) {
                //폴더이면 이미지목록을 가져오는 현재메서드를 재귀호출
                resultList.addAll(getImgFileList(f));                 
            }else {            
                //폴더가 아니고 파일이면 리스트(resultList)에 추가
                resultList.add(f);
            }
        }            
        return resultList; 
    }
}
