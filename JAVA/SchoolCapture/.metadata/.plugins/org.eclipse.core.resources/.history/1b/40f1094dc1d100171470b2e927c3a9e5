import java.awt.Color;
import java.awt.Dimension;

import javax.swing.JPanel;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JScrollPane;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.ScrollPaneConstants;

@SuppressWarnings("serial")
public class ViewPic extends JPanel {


	ImageIcon back;
	Image temp;
	Image scaled;
	BufferedImage img;//리스트에 있는 파일의 이미지를 이미지 버퍼로 저장
	int page;
	public ViewPic(String path, String subject) {
		
		
		List<File> piclist = getImgFileList(path);
		
		setBackground(Color.DARK_GRAY);
		this.setSize(800, 550);
		this.setVisible(true);
		setLayout(null);
		
		JPanel viewpanel1 = new JPanel();
		viewpanel1.setBounds(0, 0, 800, 500);
		add(viewpanel1);
		viewpanel1.setLayout(null);
		
		
		for(int index=0;index<piclist.size();index++)
		{
			try {
			    img = ImageIO.read(piclist.get(index));
			} catch (IOException e) {
			}
			System.out.println(piclist.get(index));
			temp = (Image)img;
			scaled = temp.getScaledInstance(160, 120, java.awt.Image.SCALE_SMOOTH);//이미지 스케일링
			back = new ImageIcon(scaled);//아이콘에 넣음
			JPanel article = new JPanel(){
				public void paintComponent(Graphics g)
				{
					try{//이미지 파일이 없을경우
						g.drawImage(back.getImage(), 0, 0, null);
						setOpaque(false);
						super.paintComponent(g);	
					}
					catch(Exception e){
						
					}
				}
			};
			if((10+(index/4)*130)>500&&index%4==0)
			{
				int tempindex;
				tempindex = index%16;
				JPanel viewpanel = new JPanel();
				viewpanel1.);
				viewpanel1.setBounds(0, 0, 800, 500);
				article.setBounds(56+(tempindex%4)*172, 10+(tempindex/4)*130, 160, 120);
				article.setVisible(true);
				viewpanel.add(article);
				System.out.println("create new page");
				createbutton(viewpanel1);
				System.out.println("created move button");
				continue;
			}
			
			article.setBounds(56+(index%4)*172, 10+(index/4)*130, 160, 120);
			article.setVisible(true);
			viewpanel1.add(article);
		}
		
		
		
		JButton previous = new JButton("\uC774\uC804");
		
		previous.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		previous.setFocusPainted(false);
		previous.setBorderPainted(false);
		previous.setBounds(12, 508, 97, 30);
		previous.setBackground(new Color(220, 220, 220));
		add(previous);
		
		JButton delete = new JButton("\uC0AD\uC81C");
		
		delete.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		delete.setFocusPainted(false);
		delete.setBorderPainted(false);
		delete.setBounds(688, 508, 97, 30);
		delete.setBackground(new Color(220, 220, 220));
		add(delete);
		
		//이전버튼
		previous.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				System.out.println("subject "+subject+" previous button clicked!");
				Subjects temp = new Subjects();
				removeAll();
				add(temp);
				revalidate();
				repaint();
			}
		});
		//삭제버튼
		delete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
	}
	
	
	public static List<File> getImgFileList(String path){        
        
        return getImgFileList(new File(path));
    }    

    public static List<File> getImgFileList(File file){        
            
        List<File> resultList = new ArrayList<File>(); //이미지 파일을 저장할 리스트 생성
        
        //지정한 이미지폴더가 존재 할지 않을경우 빈 리스트 반환.
        //System.out.println("파일존재 여부: "+file.exists());
        if(!file.exists()) return resultList;
        
        File[] list = file.listFiles(new FileFilter() { //원하는 파일만 가져오기 위해 FileFilter정의
            
            String strImgExt = "jpg|jpeg"; //허용할 이미지타입
            
            @Override
            public boolean accept(File pathname) {                            
                
                //System.out.println(pathname);
                boolean chkResult = false;
                if(pathname.isFile()) {
                    String ext = pathname.getName().substring(pathname.getName().lastIndexOf(".")+1);
                    System.out.println("확장자:"+ext);
                    chkResult = strImgExt.contains(ext.toLowerCase());        
                    //System.out.println(chkResult +" "+ext.toLowerCase());
                } else {
                    chkResult = true;
                }
                return chkResult;
            }
        });        
        
        for(File f : list) {            
            if(f.isDirectory()) {
                //폴더이면 이미지목록을 가져오는 현재메서드를 재귀호출
                resultList.addAll(getImgFileList(f));                 
            }else {            
                //폴더가 아니고 파일이면 리스트(resultList)에 추가
                resultList.add(f);
            }
        }            
        return resultList; 
    }
    
    public void createbutton(JPanel target)
    {

		JButton before = new JButton("\uC774\uC804");
		before.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		before.setFocusPainted(false);
		before.setBorderPainted(false);
		before.setBounds(300, 460, 97, 30);
		before.setBackground(new Color(220, 220, 220));
		target.add(before);
		before.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});

		JButton next = new JButton("\uC774\uC804");
		
		next.setFont(new Font("맑은 고딕", Font.PLAIN, 13));
		next.setFocusPainted(false);
		next.setBorderPainted(false);
		next.setBounds(410, 460, 97, 30);
		next.setBackground(new Color(220, 220, 220));
		target.add(next);
		next.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
    }

}
